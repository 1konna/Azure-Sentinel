// Name: Accounts and User Agents associated with multiple IPs in Office Azure Active Directory authentications.
//
// Id: e79325a2-4989-44c6-a3f2-236d8672ab44
//
// Description: summary of users/user agents associated with authentications from multiple IPs within a short timeframe.
// This query computes and joins two tables to highlight IPs associated with multiple authentications:
// 1- UserAgents seen in authentications from multiple IPs within short timeframe
// 2- User Ids seen authenticated from multiple IPs
// The time window join looks for instances of a small elpased time between logons.
//
// Data source: OfficeActivity
//
// Techniques: #InitialAccess
//
let timeRange=ago(7d);
let officeAuthentications = 
OfficeActivity
| where TimeGenerated >= timeRange
| where RecordType in ("AzureActiveDirectoryAccountLogon", "AzureActiveDirectoryStsLogon") 
| extend UserAgent = extractjson("$[0].Value", ExtendedProperties, typeof(string))
| where Operation == "UserLoggedIn";
// We will perform a time window join to identify useragents seen from multiple IPs within a 1-day period
let lookupWindow = 1d;
let lookupBin = lookupWindow / 2.0; // lookup bin = equal to 1/2 of the lookup window
officeAuthentications
| project-rename Start=TimeGenerated
| extend TimeKey = bin(Start, lookupBin) 
| join kind = inner (
  officeAuthentications | project-rename End=TimeGenerated
                        // TimeKey on the right side of the join - emulates this authentication appearing several times
                        | extend TimeKey = range(bin(End - lookupWindow, lookupBin),
                         bin(End, lookupBin),
                        lookupBin)
                        // translate TimeKey arrange range to a column
                        | mvexpand TimeKey to typeof(datetime)
) on UserAgent, TimeKey 
| project timeSpan = End - Start, UserId, ClientIP , UserAgent , Start, End
| summarize dcount(ClientIP) by  UserAgent
| where dcount_ClientIP >1
| join kind=inner (
   // User IDs associated with multiple different client IPs within a 1-day period:
   // Because of the join we can increase the timeframe for  which we consider accounts with multiple source IPs
   officeAuthentications
   | summarize minTime=min(TimeGenerated), maxTime=max(TimeGenerated), dcount(ClientIP) by UserId, UserAgent
   | project UserId, dcount_ClientIP , timeSpan = maxTime-minTime, UserAgent 
   | where dcount_ClientIP >1 and timeSpan <= 1d
   | project UserId, distinctIPCount=dcount_ClientIP, timeSpan, UserAgent) on UserAgent
| project UserAgent, UserId, distinctIPCount  
