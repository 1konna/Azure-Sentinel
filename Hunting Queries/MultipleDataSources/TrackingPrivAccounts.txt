// Name: Tracking Privileged Account Rare Activity
// Description: This query will determine rare activity by a high-value account carried out on a system or service. 
// Rare here means an activity type seen in the last day which has not been seen in the previous 7 days.
// If any account with such rare activity is found, the query will attempt to retrieve related activity
// from that account on that same day and summarize the information.
//
// Id: 431cccd3-2dff-46ee-b34b-61933e45f556
//
// DataSource: #AWSCloudTrail, #SigninLogs, #SecurityEvent, #OfficeActivity, #W3CIISLog
//
// Tactics: #Discovery, #PrivilegeEscalation
//
let WellKnownLocalSID = "S-1-5-32-5[0-9][0-9]";
let WellKnownGroupSID = "S-1-5-21-[0-9]*-[0-9]*-[0-9]*-5[0-9][0-9]|S-1-5-21-[0-9]*-[0-9]*-[0-9]*-1102|S-1-5-21-[0-9]*-[0-9]*-[0-9]*-1103";
let InferredPrivilegedAccounts = SecurityEvent 
| where TimeGenerated > ago(8d) 
| where EventID in ("4728", "4732", "4756") 
| where AccountType == "User" and MemberName == "-"
// Exclude Remote Desktop Users group: S-1-5-32-555 and IIS Users group S-1-5-32-568
| where TargetSid !in ("S-1-5-32-555", "S-1-5-32-568")
// 4728 - A member was added to a security-enabled global group
// 4732 - A member was added to a security-enabled local group
// 4756 - A member was added to a security-enabled universal group 
| where TargetSid matches regex WellKnownLocalSID or TargetSid matches regex WellKnownGroupSID
| summarize by DomainSlashAccount = tolower(SubjectAccount), NtDomain = SubjectDomainName,
AccountAtDomain = tolower(strcat(SubjectUserName,"@",SubjectDomainName)), AccountNameOnly = tolower(SubjectUserName);
// Build custom high value account list
let CustomAccountList = datatable(Account:string, NtDomain:string, Domain:string)[
   "john", "Contoso", "contoso.com",  "greg", "Contoso", "contoso.com",  "larry", "Domain", "contoso.com"];
let AccountFormatCustomList = CustomAccountList 
| extend AccountAtDomain = tolower(strcat(Account,"@",Domain)), AccountNameOnly = tolower(Account), 
DomainSlashAccount = tolower(strcat(NtDomain,"\\",Account));
let AccountFormat = InferredPrivilegedAccounts | union 
AccountFormatCustomList;
// Normalize activity from diverse sources into common schema
// Specify this in a function to support retrieving activity from different timeframes
let activity = view (ActivityStartTime:datetime, ActivityEndTime:datetime) {
(union isfuzzy=true
(AccountFormat | project AccountName=AccountNameOnly, AccountAtDomain, DomainSlashAccount
| join kind=inner 
(AWSCloudTrail
| where TimeGenerated <= ActivityEndTime and TimeGenerated >= ActivityStartTime
| extend DataType = "AWSCloudTrail", ClientIP = "-", AccountName = tolower(UserIdentityUserName), WinSecEventDomain = "-"
| project-rename EventType = EventName, ServiceOrSystem = EventSource)
 on AccountName),
(AccountFormat | project AccountNameOnly, AccountName = AccountAtDomain, DomainSlashAccount
| join kind=inner 
(SigninLogs
| where TimeGenerated <= ActivityEndTime and TimeGenerated >= ActivityStartTime
| extend DataType = "SigninLogs", AccountName = tolower(UserPrincipalName), WinSecEventDomain = "-"
| project-rename EventType = ResultType, ServiceOrSystem = AppDisplayName, ClientIP = IPAddress)
 on AccountName),
(AccountFormat | project AccountNameOnly, AccountName = AccountAtDomain, DomainSlashAccount
| join kind=inner 
(OfficeActivity 
| where TimeGenerated <= ActivityEndTime and TimeGenerated >= ActivityStartTime
| extend DataType = "OfficeActivity", AccountName = tolower(UserId), WinSecEventDomain = "-" 
| project-rename EventType = Operation, ServiceOrSystem = OfficeWorkload)
 on AccountName),
(AccountFormat | project AccountNameOnly, AccountAtDomain, AccountName=DomainSlashAccount
| join kind=inner 
(SecurityEvent
| where TimeGenerated <= ActivityEndTime and TimeGenerated >= ActivityStartTime
| where EventID in (4624, 4625) 
| extend DataType = "SecurityEvent", ClientIP = "-"
| extend AccountName = tolower(tostring(split(Account,"\\")[1])), Domain = tolower(tostring(split(Account,"\\")[0]))
| extend Account = tolower(Account) 
| project-rename EventType = Activity, ServiceOrSystem = Computer, WinSecEventDomain = Domain)
 on AccountName),
(AccountFormat | project AccountNameOnly, AccountName = AccountAtDomain, DomainSlashAccount
| join kind=inner 
(W3CIISLog
| where TimeGenerated <= ActivityEndTime and TimeGenerated >= ActivityStartTime
| extend DataType = "W3CIISLog", AccountName = tolower(csUserName), WinSecEventDomain = "-"
| where csUserName != "-" and isnotempty(csUserName)
| project-rename EventType = csMethod, ServiceOrSystem = sSiteName, ClientIP = cIP)
 on AccountName),
(AccountFormat | project AccountName=AccountNameOnly, AccountAtDomain, DomainSlashAccount
| join kind=inner 
(W3CIISLog
| where TimeGenerated <= ActivityEndTime and TimeGenerated >= ActivityStartTime
| extend DataType = "W3CIISLog", AccountName = tolower(csUserName), WinSecEventDomain = "-"
| where csUserName != "-" and isnotempty(csUserName)
| project-rename EventType = csMethod, ServiceOrSystem = sSiteName, ClientIP = cIP)
 on AccountName)
);
};
// Find new activity today versus prior week
let LastDay = startofday(ago(1d));
let PrevDay = endofday(ago(2d));
let Prev7Day = startofday(ago(8d));
let ActivityLastDay = activity(LastDay, now())
| summarize RareActivityStartTimeUtc = min(TimeGenerated),RareActivityEndTimeUtc = max(TimeGenerated), RareActivityCount = count() 
  by DataType, AccountName, EventType, ClientIP, ServiceOrSystem, WinSecEventDomain;
let Activity7day = activity(Prev7Day, PrevDay)
| summarize HistoricalActivityCount = count() by DataType, AccountName, EventType, ClientIP, ServiceOrSystem, WinSecEventDomain;
let NewActivityToday = ActivityLastDay | join kind=leftanti (Activity7day)
    on DataType, AccountName, ServiceOrSystem
| extend RareServiceOrSystem = ServiceOrSystem;
// Retrieve related activity as context
let RelatedActivity = 
(union isfuzzy=true
(
// Make sure we at least publish the unusual activity we identified above - even if no related context activity is found in the subsequent union
NewActivityToday 
),
// Remaining elements of the union look for related activity
(NewActivityToday 
| join kind=inner (
OfficeActivity 
| where TimeGenerated > LastDay
| summarize RelatedActivityStartTimeUtc = min(TimeGenerated), RelatedActivityEndTimeUtc = max(TimeGenerated), RelatedActivityServiceOrSystemCount = dcount(OfficeWorkload), RelatedActivityServiceOrSystemSet = makeset(OfficeWorkload), RelatedActivityClientIPSet = makeset(ClientIP), RelatedActivityCount = count() by AccountName = tolower(UserId), RelatedActivityEventType = Operation 
) on AccountName),
(NewActivityToday
| join kind=innerunique (
SecurityEvent | where TimeGenerated > LastDay
| where EventID in (4624, 4625)
| where AccountType == "User"
| summarize RelatedActivityStartTimeUtc = min(TimeGenerated), RelatedActivityEndTimeUtc = max(TimeGenerated), RelatedActivityServiceOrSystemCount = dcount(Computer), RelatedActivityServiceOrSystemSet = makeset(Computer), RelatedActivityClientIPSet = makeset("-"), RelatedActivityCount = count() by DomainSlashAccount = tolower(Account), RelatedActivityEventType = Activity
) on DomainSlashAccount),
(NewActivityToday
| join kind=inner (
SecurityEvent | where TimeGenerated > LastDay
// 7045: A service was installed in the system
| where EventID == 7045
| summarize RelatedActivityStartTimeUtc = min(TimeGenerated), RelatedActivityEndTimeUtc = max(TimeGenerated), RelatedActivityServiceOrSystemCount = dcount(Computer), RelatedActivityServiceOrSystemSet = makeset(Computer), RelatedActivityClientIPSet = makeset("-"), RelatedActivityCount = count() by DomainSlashAccount = tolower(Account), RelatedActivityEventType = Activity
) on DomainSlashAccount),
(NewActivityToday
| join kind=inner (
SecurityEvent | where TimeGenerated > LastDay
// 4720: Account created, 4726: Account deleted
| where EventID in (4720,4726)
| summarize RelatedActivityStartTimeUtc = min(TimeGenerated), RelatedActivityEndTimeUtc = max(TimeGenerated), RelatedActivityServiceOrSystemCount = dcount(UserPrincipalName), RelatedActivityServiceOrSystemSet = makeset(UserPrincipalName), RelatedActivityClientIPSet = makeset("-"), RelatedActivityCount = count() by DomainSlashAccount = tolower(Account), RelatedActivityEventType = Activity
) on DomainSlashAccount),
(NewActivityToday
| join kind=inner (
SigninLogs | where TimeGenerated > LastDay
| extend RemoteHost = tolower(tostring(parsejson(DeviceDetail.["displayName"])))
| extend OS = DeviceDetail.operatingSystem, Browser = DeviceDetail.browser
| extend StatusCode = tostring(Status.errorCode), StatusDetails = tostring(Status.additionalDetails)
| extend State = tostring(LocationDetails.state)
| summarize RelatedActivityStartTimeUtc = min(TimeGenerated), RelatedActivityEndTimeUtc = max(TimeGenerated), RelatedActivityRemoteHostSet = makeset(RemoteHost), RelatedActivityServiceOrSystemSet = makeset(AppDisplayName), RelatedActivityServiceOrSystemCount = dcount(AppDisplayName), RelatedActivityClientIPSet = makeset(IPAddress), RelatedActivityStateSet = makeset(State), RelatedActivityCount = count() by AccountAtDomain = tolower(UserPrincipalName), RelatedActivityEventType = iff(isnotempty(ResultDescription), ResultDescription, StatusDetails)
) on AccountAtDomain),
(NewActivityToday
| join kind=inner (
AWSCloudTrail | where TimeGenerated > LastDay
| summarize RelatedActivityStartTimeUtc = min(TimeGenerated),RelatedActivityEndTimeUtc = max(TimeGenerated), RelatedActivityServiceOrSystemSet = makeset(EventSource), RelatedActivityServiceOrSystemCount = dcount(EventSource), RelatedActivityClientIPSet = makeset("-"), RelatedActivityCount= count() by AccountNameOnly = tolower(UserIdentityUserName), RelatedActivityEventType = EventName
) on AccountNameOnly),
(NewActivityToday
| join kind=inner (
SecurityAlert | where TimeGenerated > LastDay
| extend ExtProps=parsejson(ExtendedProperties) 
| extend AccountName = tostring(ExtProps.["user name"])
| summarize RelatedActivityStartTimeUtc = min(TimeGenerated), RelatedActivityEndTimeUtc = max(TimeGenerated), RelatedActivityServiceOrSystemCount = dcount(AlertType), RelatedActivityServiceOrSystemSet = makeset(AlertType), RelatedActivityCount = count() by DomainSlashAccount = tolower(AccountName), RelatedActivityEventType = ProductName
) on DomainSlashAccount)
);
RelatedActivity
| project RareActivityStartTimeUtc, RareActivityEndTimeUtc, DataType, RareActivityCount, AccountName, WinSecEventDomain,
 EventType, RareServiceOrSystem, RelatedActivityStartTimeUtc, RelatedActivityEndTimeUtc, RelatedActivityEventType,
 RelatedActivityClientIPSet, RelatedActivityServiceOrSystemCount, RelatedActivityServiceOrSystemSet, RelatedActivityCount