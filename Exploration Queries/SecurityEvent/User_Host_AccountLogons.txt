// Name: User or Host Account logons
// Description: Any logons (success or failure) on a given host during the time of or recently after compromise and in the range of +-1h
//
// Entity: #Host
// Input: Computer, Hostname, HostId
// Output: Accounts
//
// QueryPeriod:  +-1h default, change as needed
//
// Data Source: #SecurityEvent
//
// Techniques: #Persistence, #Discovery, #LateralMovement, #Collection
//
let GetAllLogonsOnHost = (suspiciousEventTime:datetime, Host:string){
//+-1h for any logons
let StartTime = suspiciousEventTime-1h;
let EndTime = suspiciousEventTime+1h;
SecurityEvent 
| where TimeGenerated between (StartTime .. EndTime)
| where EventID == 4624 or EventID == 4625
| where toupper(Computer) contains Host or toupper(WorkstationName) contains Host
| summarize LogonCount=count() by TimeGenerated, EventID, Account, LogonTypeName, SubStatus, AccountType, Computer, WorkstationName, IpAddress
// sort by failed logons first, then total count
| sort by EventID desc, LogonCount
};
GetAllLogonsOnHost(datetime('2019-01-20T10:02:51.000'), toupper("<hostname>"))