// Name: Account Added and Removed from Privileged Groups within 1 Day.
// Description: Accounts that are added to privileged group and then expeditiously removed 
// could be a sign of compromise and needs verification. This query tries to find an account
// that was added to a privileged group and then removed within a day. 
//
// Id: 7efc75ce-e2a4-400f-a8b1-283d3b0f2c60
//
// Severity: Low
//
// QueryFrequency: 1d
//
// QueryPeriod: 1d
//
// AlertTriggerOperator: gt
//
// AlertTriggerThreshold: 0
//
// DataSource: #SecurityEvent
//
// Tactics: #Persistence, #Discovery, #LateralMovement
//
let WellKnownLocalSID = "S-1-5-32-5[0-9][0-9]";
let WellKnownGroupSID = "S-1-5-21-[0-9]*-[0-9]*-[0-9]*-5[0-9][0-9]|S-1-5-21-[0-9]*-[0-9]*-[0-9]*-1102|S-1-5-21-[0-9]*-[0-9]*-[0-9]*-1103";
let AC_Add = 
SecurityEvent
| where TimeGenerated >= ago(1d)
// Event ID related to member addition.
| where EventID in (4728, 4732,4756) 
| where TargetSid matches regex WellKnownLocalSID or TargetSid matches regex WellKnownGroupSID  
| parse EventData with * '"MemberName">' AccountAdded ",OU" * 
| where isnotempty(AccountAdded)
| extend GroupAddedTo = TargetUserName, AddingAccount = Account 
| extend  AccountAdded_GroupAddedTo_AddingAccount = strcat(AccountAdded, "||", GroupAddedTo, "||", AddingAccount )
| project AccountAdded_GroupAddedTo_AddingAccount, AccountAddedTime=TimeGenerated;
let AC_Remove = 
SecurityEvent
| where TimeGenerated >= ago(1d)
// Event ID related to member removal.
| where EventID in (4729,4733,4757)
| where TargetSid matches regex WellKnownLocalSID or TargetSid matches regex WellKnownGroupSID 
| parse EventData with * '"MemberName">' AccountRemoved ",OU" * 
| where isnotempty(AccountRemoved)
| extend GroupRemovedFrom = TargetUserName, RemovingAccount = Account
| extend AccountRemoved_GroupRemovedFrom_RemovingAccount = strcat(AccountRemoved, "||", GroupRemovedFrom, "||", RemovingAccount)
| project AccountRemoved_GroupRemovedFrom_RemovingAccount, AccountRemovedTime=TimeGenerated, Computer, RemovedAccountId=tolower(AccountRemoved), RemovedByUser=SubjectUserName, RemovedByUserLogonId= SubjectLogonId,  GroupRemovedFrom = TargetUserName, TargetDomainName; 
AC_Add 
| join kind= inner AC_Remove on $left.AccountAdded_GroupAddedTo_AddingAccount==$right.AccountRemoved_GroupRemovedFrom_RemovingAccount 
| extend DurationinSecondAfter_Removed =datetime_diff ('second', AccountRemovedTime, AccountAddedTime)
| where DurationinSecondAfter_Removed > 0
| project-away AccountRemoved_GroupRemovedFrom_RemovingAccount