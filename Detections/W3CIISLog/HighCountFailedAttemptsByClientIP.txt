//Name: Large number of failed attempts from same client IP
// Description: This query shows when 50 or more failed attempts from a given client IP in 1 minute occurring on a given server
// This could be indicative of attempted probing.  This could also simply indicate a misconfigured service or device. 
//
// Status code mappings for your convenience, also inline if the mapping is not available
// IIS status code mapping - https://support.microsoft.com/en-us/help/943891/the-http-status-code-in-iis-7-0-iis-7-5-and-iis-8-0
// Win32 Status code mapping - https://msdn.microsoft.com/en-us/library/cc231199.aspx
//
// Id: 19e01883-15d8-4eb6-a7a5-3276cd668388
//
// Severity: Medium
//
// QueryFrequency: 1m
//
// QueryPeriod: 1m
//
// AlertTriggerOperator: gt
//
// AlertTriggerThreshold: 50
//
// DataSource: W3CIISLog
//
// Techniques: #Discovery, #PrivilegeEscalation
//
let timeFrame = ago(1m);
W3CIISLog
| where TimeGenerated >= timeFrame
| where scStatus in ("401","403")
| where csUserName != "-"
// Handling Exchange specific items in IIS logs to remove the unique log identifier in the URI
//| extend csUriQuery = iff(csUriQuery startswith "MailboxId=", tostring(split(csUriQuery, "&")[0]) , csUriQuery )
//| extend csUriQuery = iff(csUriQuery startswith "X-ARR-CACHE-HIT=", strcat(tostring(split(csUriQuery, "&")[0]),tostring(split(csUriQuery, "&")[1])) , csUriQuery )
| summarize FailStartTimeUtc = min(TimeGenerated), FailEndTimeUtc = max(TimeGenerated), makeset(sSiteName) , makeset(sPort), ConnectionCount = count() by Computer, sIP, cIP, csMethod, scStatus, scSubStatus, scWin32Status
| extend sPortCount = arraylength(set_sPort)
| extend scStatusFull = strcat(scStatus, ".",scSubStatus) 
// Map common IIS codes
| extend scStatusFull_Friendly = case(
scStatusFull == "401.0", "Access denied.",
scStatusFull == "401.1", "Logon failed.",
scStatusFull == "401.2", "Logon failed due to server configuration.",
scStatusFull == "401.3", "Unauthorized due to ACL on resource.",
scStatusFull == "401.4", "Authorization failed by filter.",
scStatusFull == "401.5", "Authorization failed by ISAPI/CGI application.",
scStatusFull == "403.0", "Forbidden.",
scStatusFull == "403.4", "SSL required.",
"See - https://support.microsoft.com/en-us/help/943891/the-http-status-code-in-iis-7-0-iis-7-5-and-iis-8-0")
// Mapping to Hex so can be mapped using website in comments above
| extend scWin32Status_Hex = tohex(tolong(scWin32Status)) 
// Map common win32 codes
| extend scWin32Status_Friendly = case(
scWin32Status_Hex =~ "52e", "Logon failure: Unknown user name or bad password.", 
scWin32Status_Hex =~ "533", "Logon failure: Account currently disabled.", 
scWin32Status_Hex =~ "2ee2", "The request has timed out.", 
scWin32Status_Hex =~ "0", "The operation completed successfully.", 
scWin32Status_Hex =~ "1", "Incorrect function.", 
scWin32Status_Hex =~ "2", "The system cannot find the file specified.", 
scWin32Status_Hex =~ "3", "The system cannot find the path specified.", 
scWin32Status_Hex =~ "4", "The system cannot open the file.", 
scWin32Status_Hex =~ "5", "Access is denied.", 
scWin32Status_Hex =~ "8009030e", "SEC_E_NO_CREDENTIALS", 
scWin32Status_Hex =~ "8009030C", "SEC_E_LOGON_DENIED", 
"See - https://msdn.microsoft.com/en-us/library/cc231199.aspx")
// decode URI when available
//| extend decodedUriQuery = url_decode(csUriQuery)
| summarize FailStartTimeUtc = min(FailStartTimeUtc), FailEndTimeUtc = max(FailEndTimeUtc), makeset(csMethod), makeset(scStatus), makeset(scSubStatus), makeset(scWin32Status), makeset(scStatusFull), makeset(scStatusFull_Friendly), makeset(scWin32Status_Hex), makeset(scWin32Status_Friendly), sum(ConnectionCount) by Computer, tostring(set_sSiteName), sIP, cIP, tostring(set_sPort), sPortCount
| where sum_ConnectionCount >= 50
| project FailStartTimeUtc, FailEndTimeUtc, Computer, set_sSiteName, sIP, cIP, set_csMethod, set_scStatus, set_scSubStatus, set_scWin32Status, set_sPort, sum_ConnectionCount, sPortCount, set_scStatusFull, set_scStatusFull_Friendly, set_scWin32Status_Hex, set_scWin32Status_Friendly